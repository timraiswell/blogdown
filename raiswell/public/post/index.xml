<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Data Notes</title>
    <link>/post/</link>
    <description>Recent content in Posts on Data Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 27 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>One-Way ANOVA in Python</title>
      <link>/post/one-way-anova-in-python/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/one-way-anova-in-python/</guid>
      <description>Installing and Loading the Reticulate Package This package allows us to run Python 3 inside R Markdown chunks. You will need Python 3 installed. There are details on how to do that in the Resources section of the blog. I also needed to change Reticulate’s settings to point it at Python3 on my Mac. You can find those details here.
Of course, you do not need to run Python from Rstudio, or within the R framework.</description>
    </item>
    
    <item>
      <title>Sentiment Analysis of Football Fan Tweets During a Game</title>
      <link>/post/sentiment-analysis-of-football-fans/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/sentiment-analysis-of-football-fans/</guid>
      <description>Are Manchester United fans more critical of their team than opposing fans about theirs? This was the (too ambitious) question I intended to answer when I began this piece but having discovered some of the difficulties in accessing bulk, multi-period Twitter data I have scaled it back. I certainly intend to revisit the bigger question using Twitter scraping solutions that have since become available, but for now I’ll restrict myself to the more achievable question:</description>
    </item>
    
    <item>
      <title>R-Tips #1: Turning Off and On Scientific Notation</title>
      <link>/post/r-tips-1-scientific-notation/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/r-tips-1-scientific-notation/</guid>
      <description>options(scipen = 999) #the command that turns off scientific notation in R output I often set this parameter in any R project in which I’ll be evaluating predictive model performance. But why would you want to turn off scientific notation? First, it’s a personal preference, but I strongly advocate for learning how to read scientific notation as it is a data science standard. Second, your audience may not be mathematically trained.</description>
    </item>
    
  </channel>
</rss>
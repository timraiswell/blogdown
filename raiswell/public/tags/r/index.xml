<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Data Notes</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Data Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 26 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sentiment analysis of football fan tweets during a game</title>
      <link>/post/sentiment-analysis-of-football-fans/</link>
      <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/sentiment-analysis-of-football-fans/</guid>
      <description>I’ll start this analysis with the question I want to answer:
Are Manchester United fans more critical of their team than opposing fans about theirs?
I love English football. I was born and grew up in Manchester, England, but now I live in the States and I’m forced to follow the English Premiership remotely. I like to track my Twitter feed during games to see the opinion of other fans. One thing I noticed was the propensity of Manchester United fans to expect heroics from the team on a weekly basis and I wondered whether it was any different for fans of other clubs.</description>
    </item>
    
    <item>
      <title>Removing scientific notation in R</title>
      <link>/post/r-scipen/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/r-scipen/</guid>
      <description>options(scipen = 999) #the command that turns off scientific notation in R output I often set this parameter in any R project in which I’ll be evaluating predictive model performance. But why would you want to turn off scientific notation?
Scientific notation is shorthand for large number strings. For example:
 The number 0.00000000002 is written in R output in the scientific notation format as 2e-11
 Basically, this approach takes the integer “2”, puts a decimal point in front of it (1 of the 11), and counts off the remainder of the e-numbers (10) as decimal places.</description>
    </item>
    
  </channel>
</rss>